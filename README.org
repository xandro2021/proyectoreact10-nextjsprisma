#+title: React & NextJS/Prisma

* About
+ Simple React project using the NextJS framework

* Dependencies
** Axios
+ Consuming API with axios to simplify the code
#+begin_src bash
npm i axios
#+end_src
** ts-node
#+begin_src bash
npm i ts-node
#+end_src
** TailwindCSS
*** Installation
#+begin_src bash
npm i -D tailwindcss postcss autoprefixer
#+end_src
*** Configuration
**** Step 01
The following command will create two config files: tailwind.config.js and postcss.config.js
#+begin_src bash
npx tailwindcss init -p
#+end_src
**** Step 02
Look for the file src/index.css that was created by vite and add the following commands
#+begin_src css
@tailwind base;
@tailwind components;
@tailwind utilities;
#+end_src
**** Step 03
Open the file named tailwind.config.js that was created in the first step, and change it with the following content
#+begin_src js
/** @type {import('tailwindcss').Config} */
export default {
  content: [
    "./pages/**/*.{js,ts,jsx,tsx}",
    "./layout/**/*.{js,ts,jsx,tsx}",
    "./components/**/*.{js,ts,jsx,tsx}"
  ],
  theme: {
    extend: {},
  },
  plugins: [],
}
#+end_src
** Prisma
*** Installation
**** Development
#+begin_src bash
npm i -D prisma
#+end_src
**** Production
#+begin_src bash
npm i @prisma/client
#+end_src
*** Configuration
**** Start
#+begin_src bash
npx prisma init
#+end_src
**** .env
#+begin_src
DATABASE_URL="databaseBrand://user:pass@localhost:port/databaseName"
#+end_src
*** Usage
**** Creata data models in prisma/scheme.prisma
Due to how small the project is, it is better to directly check the file instead of writing it again here
**** Update the Database schema/model
Used everytime the schema.prisma is modified. It will ask for name according with the change
#+begin_src bash
npx prisma migrate dev
#+end_src
**** Reset the Database (Delete all the data)
#+begin_src bash
npx prisma migrate reset
#+end_src
**** Display Database
#+begin_src bash
npx prisma studio
#+end_src
**** Seed the DB
+ Create a folder data with the files categorias.ts and productos.ts
+ Create a seed.ts
+ Modify package.json and add after "scripts":
#+begin_src json
  "prisma": {
    "seed": "ts-node prisma/seed.ts"
  },
#+end_src
+ Run the command in the terminal:
#+begin_src bash
npx prisma db seed
#+end_src
**** Get data from the DB with NextJS (Query DB)
***** ServersideProps
+ The result is return as a props that will be automatically available in the main components props paramerter ({ categorias })
+ It is possible to use the alternative function in notes
+ It is USED when you want to display the query results in a component
#+begin_src js
export const getServerSideProps = async () => {

  const prisma = new PrismaClient();
  // Consultar Base de Datos
  const categorias = await prisma.categoria.findMany();

  return {
    props: {
      categorias,
    }
  }
}
#+end_src
***** api folder
+ The files in the api folder are always run in ther server side. It is possible to get the data base query result
+ It is used when you want to save a query result in the useState instance
#+begin_src js
export default async function handler(req, res) {
  const prisma = new PrismaClient();
  const categorias = await prisma.categoria.findMany();

  res.status(200).json(categorias);
}
#+end_src
* Extra notes
* Deployment
